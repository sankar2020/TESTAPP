package com.testapp.db.testapp_db.entity.base;

/**
 * 
 * 
  _____                      _              _ _ _     _   _     _        __ _ _      
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |     
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___ 
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|
 
                                                                                   
 * DO NOT EDIT THIS FILE!! 
 *
 *  FOR CUSTOMIZE UserBase PLEASE EDIT ../User.java
 * 
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER CODE GENERATION --
 * 
 */
 

/**
 * This is the model of User object
 * 
 */

import javax.persistence.GeneratedValue;
import javax.persistence.MappedSuperclass;
import javax.persistence.Id;
import javax.persistence.Column;
import java.util.Date;
import javax.persistence.ManyToOne;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.FetchType;
import java.util.stream.Collectors;

import com.testapp.db.testapp_db.entity.User;
import com.testapp.db.testapp_db.entity.Roles;
// Import relations


@MappedSuperclass
public class UserBase {
	
	@Id
	@GeneratedValue
	private Long _id;
	
	// Attributes
	@Column(nullable=false)
	private String username;
	@Column(nullable=false)
    private String password;
    private String token;
	@OneToMany(mappedBy="user", fetch = FetchType.LAZY) 
    private List<Roles> roles = new ArrayList<>();;
	@Column()
    private String Email;
	@Column()
    private String ProfileType;
	@Column()
    private Boolean RegistrationStatus;
	@Column()
    private String RoleType;
	@Column()
    private String SubscriptionType;
	@Column(nullable=false)
    private String UserType;
	
	
	
	public Long get_id() {
		return _id;
	}

	public void set_id(Long id) {
		this._id = id;
	}
	
	public String getToken() {
		return token;
	}
	public void setToken(String token) {
		this.token = token;
	}
	public String getEmail() {
		return Email;
	}

	public void setEmail(String Email) {
		this.Email = Email;
	}
	public String getProfileType() {
		return ProfileType;
	}

	public void setProfileType(String ProfileType) {
		this.ProfileType = ProfileType;
	}
	public Boolean getRegistrationStatus() {
		return RegistrationStatus;
	}

	public void setRegistrationStatus(Boolean RegistrationStatus) {
		this.RegistrationStatus = RegistrationStatus;
	}
	public String getRoleType() {
		return RoleType;
	}

	public void setRoleType(String RoleType) {
		this.RoleType = RoleType;
	}
	public String getSubscriptionType() {
		return SubscriptionType;
	}

	public void setSubscriptionType(String SubscriptionType) {
		this.SubscriptionType = SubscriptionType;
	}
	public String getUserType() {
		return UserType;
	}

	public void setUserType(String UserType) {
		this.UserType = UserType;
	}
	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	public boolean hasRole(String role) {
		List<String> lista = roles.stream()
				.map(Roles::getRole)
				.collect(Collectors.toList());
		return lista.indexOf(role) != -1;
	}
    

    
}